-- Enable import on 2020-04-17
-- import = function () end


print = function(...) Misc:Print(...) end
os.exit = function() print("os.exit() is disabled") end
                
-- copy from NLua
function Each(o)
    local e = o:GetEnumerator()
    return function()
        if e:MoveNext() then
            return e.Current
        end
    end
end

string.startswith = function (text, keyword)
    if text == nil or keyword == nil then   
        return false
    end
    local t = string.lower(text)
    local kw ='^' .. string.lower(keyword)
    return string.find(t, kw) ~= nil
end

string.endswith = function (text, keyword)
    if text == nil or keyword == nil then   
        return false
    end
    local t = string.lower(text)
    local kw = string.lower(keyword) .. '$'
    return string.find(t, kw) ~= nil
end

string.isempty = function(text)
    return text == nil or text == ''
end

table.contains = function(haystack, needle)
    assert(type(haystack) == "table", 'table.contains(haystack, needle): param type error')
	for _, item in pairs(haystack)
    do
        if needle == item then
            return true
        end
    end
    return false
end

table.length = function(T)
    if T == nil or type(T) ~= "table" then
        return -1
    end
    local count = 0
    for _ in pairs(T) do count = count + 1 end
    return count
end

table.tostring = function(T)
    assert(type(T) == "table", 'table.tostring(): param type error')    
    local insp = Inspect or require 'libs.inspect'
    return insp(T)
end